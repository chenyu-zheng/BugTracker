@model BugTracker.ViewModels.EditTicketViewModel

@{
    ViewBag.Title = "Edit Ticket";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">@ViewBag.Title</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
<div class="row">
    <div class="col-lg-8">
        <div class="panel panel-default">
            <div class="panel-heading">
                @Html.DisplayNameFor(m => m.Id): @Html.DisplayFor(m => m.Id)
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-12">

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(m => m.Id)

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(m => m.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(m => m.Subject, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(m => m.Description, htmlAttributes: new { rows = "8", @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => m.ProjectId, Model.ProjectList, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.ProjectId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => m.CategoryId, Model.CategoryList, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.PriorityId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => m.PriorityId, Model.PriorityList, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.PriorityId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @if (Model.CanEditStatus)
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.StatusId, Model.StatusList, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.StatusId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    @Html.HiddenFor(m => m.StatusId)
                                }

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*@Scripts.Render("~/bundles/tinymce")
    <script type="text/javascript">
        $(function () {
            tinymce.init({
                selector: '#Description',
                plugins: ['autoresize', 'code']
            });
        });
    </script>*@
}

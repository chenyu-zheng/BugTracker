@model BugTracker.ViewModels.TicketDetailsViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Ticket</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(m => m.Id)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.Id)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.Subject)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.Subject)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.AuthorName)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.AuthorName)
        </dd>
        <dt>
            @Html.DisplayNameFor(m => m.Created)
        </dt>

        <dd>
            @Model.Created.ToString("yy-MM-dd HH:mm")
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.Updated)
        </dt>
        <dd>
            @(Model.Updated?.ToString("yy-MM-dd HH:mm"))
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.StartDate)
        </dt>
        <dd>
            @(Model.StartDate?.ToString("yy-MM-dd HH:mm"))
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.DueDate)
        </dt>
        <dd>
            @(Model.DueDate?.ToString("yy-MM-dd HH:mm"))
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.Description)
        </dt>

        <dd>
            @Html.Raw(Model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.ProjectName)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.ProjectName)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.CategoryName)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.CategoryName)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.StatusName)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.StatusName)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.PriorityName)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.PriorityName)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.AssigneeName)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.AssigneeName)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.NumberOfRevisions)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.NumberOfRevisions)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.NumberOfAttachments)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.NumberOfAttachments)
        </dd>

        <dt>
            @Html.DisplayNameFor(m => m.NumberOfComments)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.NumberOfComments)
        </dd>
    </dl>
</div>
@if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
{
    <div class="row">
        <a href="#" id="enableAssignment" class="col-md-3">Assign To</a>
        @using (Html.BeginForm("Assign", "Tickets", FormMethod.Post,
            new { id = "AssignForm", style = "display: none" }))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" id="Id" name="Id" value=@Model.Id class="form-control" />
            <div class="form-group">
                <div class="col-md-4">
                    <select class="form-control" id="AssigneeId" name="AssigneeId"></select>
                </div>
                <div class="col-md-4">
                    <input type="submit" value="Assign" class="btn btn-default" />
                </div>
            </div>
        }
    </div>
}
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")

</p>

@if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
{
    @section Scripts {
        <script type="text/javascript">
            $("#enableAssignment").click(() => {
                if ($('#AssignForm').is(':visible')) {
                    $("#enableAssignment").text("Assign To");
                    $("#AssignForm").hide();
                } else {
                    $("#enableAssignment").text("Cancel");
                    $("#AssignForm").show();
                    showValue(@Model.ProjectId, "@Model.AssigneeId");
                }
            });

            function showValue(projectId, selectedVal = null)
            {
                $("#AssigneeId").html("<option value>Not Assigned</option>");
                projectId &&
                    $.getJSON('@Url.Action("GetAssigneeList", "Tickets")' + "?projectId=" + projectId, (result) => {
                        const data = result.data;
                        for (const item of data) {
                            $("#AssigneeId").append(`<option value="${item.Id}">${item.DisplayName}</option>`)
                            item.Id == selectedVal && $("#AssigneeId").val(selectedVal);
                        }
                    });
            }
        </script>
    }
}

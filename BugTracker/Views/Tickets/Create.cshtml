@model BugTracker.ViewModels.CreateTicketViewModel

@{
    ViewBag.Title = "New Ticket";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">@ViewBag.Title</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
<div class="row">
    <div class="col-lg-8">
        <div class="panel panel-default">
            <div class="panel-heading">
                
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-12">

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(m => m.Subject, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(m => m.Subject, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => m.ProjectId, Model.ProjectList, "---- Please Select ----", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.ProjectId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => m.CategoryId, Model.CategoryList, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.PriorityId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => m.PriorityId, Model.PriorityList, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.PriorityId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @if (Model.CanAssign)
                                {
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.AssigneeId, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownListFor(m => m.AssigneeId, Model.AssigneeList, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.AssigneeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/tinymce")
    <script type="text/javascript">
        $(function () {
            tinymce.init({
                selector: '#Description',
                plugins: ['autoresize', 'code']
            });
        });
    </script>
    @if (Model.CanAssign)
    {
        <script type="text/javascript">
            $("#ProjectId").ready(() => showValue($("#ProjectId").val(), "@Model.AssigneeId"));
            $("#ProjectId").on("change", () => showValue($("#ProjectId").val()));

            function showValue(projectId, selectedVal = null)
            {
                if (projectId) {
                    $("#AssigneeId").html("<option value>Not Assigned</option>");
                    $.getJSON('@Url.Action("GetAssigneeList", "Tickets")' + "?projectId=" + projectId, (result) => {
                        const data = result.data;
                        for (const item of data) {
                            $("#AssigneeId").append(`<option value="${item.Id}">${item.DisplayName}&emsp;(${item.Roles.join(", ")})</option>`)
                            item.Id == selectedVal && $("#AssigneeId").val(selectedVal);
                        }
                    });
                } else {
                    $("#AssigneeId").html("<option value>---- Please Select a Project ----</option>");
                }

            }
        </script>
    }
}

@model BugTracker.ViewModels.CreateTicketViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ticket</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ProjectId, Model.ProjectList, "---- Please Select ----", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.CategoryId, Model.CategoryList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.PriorityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.PriorityId, Model.PriorityList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
        {
            <div class="form-group">
                @Html.LabelFor(m => m.AssigneeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.AssigneeId, Model.AssigneeList, "Not Assigned", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.AssigneeId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/tinymce")
    <script type="text/javascript">
        $(function () {
            tinymce.init({
                selector: '#Description',
                plugins: ['autoresize', 'code']
            });
        });
    </script>
    @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
    {
        <script type="text/javascript">
            $("#ProjectId").ready(() => showValue($("#ProjectId").val(), "@Model.AssigneeId"));
            $("#ProjectId").on("change", () => showValue($("#ProjectId").val()));

            function showValue(projectId, selectedVal = null)
            {
                $("#AssigneeId").html("<option value>Not Assigned</option>");
                projectId &&
                    $.getJSON('@Url.Action("GetAssigneeList", "Tickets")' + "?projectId=" + projectId, (result) => {
                        const data = result.data;
                        for (const item of data) {
                            $("#AssigneeId").append(`<option value="${item.Id}">${item.DisplayName}</option>`)
                            item.Id == selectedVal && $("#AssigneeId").val(selectedVal);
                        }
                    });
            }
        </script>
    }
}